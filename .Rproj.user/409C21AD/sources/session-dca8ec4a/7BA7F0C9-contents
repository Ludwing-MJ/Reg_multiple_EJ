# ANÁLISIS DE REGRESIÓN LINEAL SIMPLE Y MÚLTIPLE
# Dr. Sc. Ezequiel López

# Revise la información disponible en el enlace siguiente:
# https://rpubs.com/osoramirez/316691
# https://rpubs.com/joser/RegresionSimple
# https://www.cienciadedatos.net/documentos/25_regresion_lineal_multiple.html

# 1. PREPARACIÓN DEL ENTORNO - ELIMINA OBJETOS PREVIOS
rm(list=ls())  # Elimina todos los objetos del entorno actual
# ADVERTENCIA: Este comando borra todo. Asegúrate de guardar datos importantes.

# 2. CARGAR PAQUETES Y DATOS
# Datos de medidas corporales (Fuente: GitHub - fhernanb)
url <- 'https://raw.githubusercontent.com/fhernanb/datos/master/medidas_cuerpo'
url
datos <- read.table(file=url, header=TRUE)  # Carga datos con encabezado

# 3. MANIPULACIÓN DE DATOS
# Filtrar por sexo 
hombres <- datos[datos$sexo=="Hombre", ]  # Subconjunto hombres
mujeres <- datos[datos$sexo=="Mujer", ]    # Subconjunto mujeres

# 4. ANÁLISIS EXPLORATORIO INICIAL
# Gráfico de dispersión básico
plot(datos$altura, datos$peso, 
     main="Relación Altura-Peso",
     xlab="Altura (cm)", ylab="Peso (kg)")

# 5. REGRESIÓN LINEAL SIMPLE (1 variable predictora)
# Modelo: peso = β0 + β1*altura + ε
reg1 <- lm(peso ~ altura, data=datos)

# Resumen del modelo
summary(reg1)

# INTERPRETACIÓN:
# - Coefficients: Valores de β0 (intercepto) y β1 (pendiente)
# - R-squared: % de variabilidad explicada por el modelo
# - p-valor: Significancia estadística (valores <0.05 son importantes)

# ANOVA para significancia global del modelo
anova(reg1)
# INTERPRETACIÓN:
# - p-valor <0.05 indica que el modelo es estadísticamente significativo


# 6. PREDICCIONES E INTERVALOS DE CONFIANZA
# Crear nuevos valores para predecir
nuevas_alturas <- data.frame(altura=seq(145, 195, 1.5))  # Secuencia de alturas

# Calcular predicciones
predicciones <- predict(reg1, nuevas_alturas)
round(predicciones, 2)  # Muestra resultados con 2 decimales

# Intervalos de confianza al 90% para los coeficientes
confint(reg1, level=0.9)

# 7. VERIFICACIÓN DE SUPUESTOS DEL MODELO
# Gráficos diagnósticos
par(mfrow=c(2,2))  # Divide ventana gráfica en 2x2
plot(reg1)         # Genera 4 gráficos de diagnóstico
par(mfrow=c(1,1))  # Restaura configuración gráfica

# Pruebas estadísticas formales
shapiro.test(resid(reg1))  # Normalidad de residuos
# INTERPRETACIÓN: p >0.05 indica normalidad (no rechaza H0)

library(car)  # Carga paquete para pruebas avanzadas
ncvTest(reg1)  # Homocedasticidad (varianza constante)
# INTERPRETACIÓN: p >0.05 indica homocedasticidad (no rechaza H0)

# 8. VISUALIZACIÓN CON GGPLOT2
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)

ggplot(datos, aes(x=altura, y=peso)) +
  geom_point(shape=19, alpha=0.6) +     # Puntos sólidos con transparencia
  geom_smooth(method=lm, se=TRUE,       # Línea de regresión con intervalo
              color="#E69F00", fill="#56B4E9") +
  labs(title="Regresión Lineal: Peso vs Altura",
       subtitle="Con intervalo de confianza del 95%",
       x="Altura (cm)", y="Peso (kg)") +
  theme_minimal()

# 9. REGRESIÓN LINEAL MÚLTIPLE (2 variables predictoras)
# Modelo: peso = β0 + β1*altura + β2*edad + ε
reg2 <- lm(peso ~ altura + edad, data=datos)

# Resumen del modelo
summary(reg2)

# ANOVA para comparación de modelos
anova(reg2)

# Diagnóstico de multicolinealidad
vif(reg2)  # Factor de Inflación de Varianza
# INTERPRETACIÓN: Valores >4 sugieren problemas de multicolinealidad

# 10. SELECCIÓN DE MODELOS CON CRITERIO AIC
# Método paso a paso (stepwise) para selección de variables
step(reg2, direction="both", trace=1)
# INTERPRETACIÓN:
# - Muestra el proceso de selección
# - El modelo final tiene el menor valor AIC

# 11. VERIFICACIÓN DE SUPUESTOS PARA MODELO MÚLTIPLE
par(mfrow=c(2,2))
plot(reg2)  # Gráficos diagnósticos para modelo múltiple

# Pruebas estadísticas
shapiro.test(resid(reg2))  # Normalidad
ncvTest(reg2)              # Homocedasticidad
